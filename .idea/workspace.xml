<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="86bbf1ce-836a-4558-aea4-48695535f454" name="Default" comment="" />
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="TRACKING_ENABLED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileEditorManager">
    <leaf SIDE_TABS_SIZE_LIMIT_KEY="300">
      <file leaf-file-name="core.clj" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/svg/core.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="238">
              <caret line="14" column="17" lean-forward="false" selection-start-line="14" selection-start-column="17" selection-end-line="14" selection-end-column="17" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="README.md" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/README.md">
          <provider selected="true" editor-type-id="split-provider[text-editor;markdown-preview-editor]">
            <state split_layout="SPLIT">
              <first_editor relative-caret-position="34">
                <caret line="2" column="20" lean-forward="false" selection-start-line="2" selection-start-column="20" selection-end-line="2" selection-end-column="20" />
                <folding />
              </first_editor>
              <second_editor />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name=".gitignore" pinned="false" current-in-tab="true">
        <entry file="file://$PROJECT_DIR$/.gitignore">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="170">
              <caret line="10" column="5" lean-forward="false" selection-start-line="10" selection-start-column="5" selection-end-line="10" selection-end-column="5" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="project.clj" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/project.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="68">
              <caret line="4" column="7" lean-forward="false" selection-start-line="4" selection-start-column="0" selection-end-line="5" selection-end-column="0" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
    </leaf>
  </component>
  <component name="FindInProjectRecents">
    <findStrings>
      <find>doseq</find>
      <find>let</find>
      <find>fetch-page</find>
      <find>start-data</find>
      <find>sess</find>
      <find>parse</find>
      <find>data-params</find>
      <find>login</find>
      <find>(parse (fetch-page &quot;https://you.eraga.net/rest/issue/HSK-2748&quot;)):url</find>
      <find>get-by</find>
      <find>get-name</find>
      <find>show-row</find>
      <find>parse-subs</find>
      <find>show-all</find>
      <find>source</find>
      <find>:url</find>
    </findStrings>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GradleLocalSettings">
    <option name="externalProjectsViewState">
      <projects_view />
    </option>
  </component>
  <component name="IdeDocumentHistory">
    <option name="CHANGED_PATHS">
      <list>
        <option value="$PROJECT_DIR$/src/svg/handler.clj" />
        <option value="$PROJECT_DIR$/project.clj" />
        <option value="$PROJECT_DIR$/resources/public/data.svg" />
        <option value="$PROJECT_DIR$/src/svg/core.clj" />
        <option value="$PROJECT_DIR$/README.md" />
        <option value="$PROJECT_DIR$/.gitignore" />
      </list>
    </option>
  </component>
  <component name="JsBuildToolGruntFileManager" detection-done="true" sorting="DEFINITION_ORDER" />
  <component name="JsBuildToolPackageJson" detection-done="true" sorting="DEFINITION_ORDER" />
  <component name="JsGulpfileManager">
    <detection-done>true</detection-done>
    <sorting>DEFINITION_ORDER</sorting>
  </component>
  <component name="PhpServers">
    <servers />
  </component>
  <component name="PhpWorkspaceProjectConfiguration" backward_compatibility_performed="true" />
  <component name="ProjectFrameBounds" extendedState="6">
    <option name="y" value="23" />
    <option name="width" value="1920" />
    <option name="height" value="960" />
  </component>
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectView">
    <navigator currentView="ProjectPane" proportions="" version="1">
      <flattenPackages />
      <showMembers />
      <showModules />
      <showLibraryContents />
      <hideEmptyPackages />
      <abbreviatePackageNames />
      <autoscrollToSource />
      <autoscrollFromSource />
      <sortByType />
      <manualOrder />
      <foldersAlwaysOnTop value="true" />
    </navigator>
    <panes>
      <pane id="PackagesPane" />
      <pane id="Scratches" />
      <pane id="ProjectPane">
        <subPane>
          <expand>
            <path>
              <item name="svg" type="b2602c69:ProjectViewProjectNode" />
              <item name="svg" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="svg" type="b2602c69:ProjectViewProjectNode" />
              <item name="svg" type="462c0819:PsiDirectoryNode" />
              <item name="resources" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="svg" type="b2602c69:ProjectViewProjectNode" />
              <item name="svg" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="svg" type="b2602c69:ProjectViewProjectNode" />
              <item name="svg" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="svg" type="462c0819:PsiDirectoryNode" />
            </path>
          </expand>
          <select />
        </subPane>
      </pane>
      <pane id="AndroidView" />
      <pane id="Scope" />
    </panes>
  </component>
  <component name="PropertiesComponent">
    <property name="nodejs_interpreter_path" value="/usr/local/bin/node" />
    <property name="settings.editor.selected.configurable" value="Keybindings" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="aspect.path.notification.shown" value="true" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
  </component>
  <component name="ReplState" timestamp="1508420977530">{:repl-history {:ide [], :local [{:command &quot;(comment\n\n(:cookies @sess)\n\n@data-params\n\n@sess\n\n(make-svg \&quot;HSK-2748\&quot;)\n\n\n(def p [])\n(conj p {:issue :name})\n\n(doseq [s @data-params]\n       (let [q (:name s)]\n            (conj s {:id 1})\n            )\n       (s)\n       )\n\n\n)&quot;, :offset 225, :ns &quot;svg.core&quot;} {:command &quot;(doseq [s @data-params]\n       (let [q (:name s)]\n            (conj s {:id 1})\n            )\n       (s)\n       )&quot;, :offset 112, :ns &quot;svg.core&quot;} {:command &quot;(doseq [s @data-params]\n       (let [q (:name s)]\n            (conj s {:id 1})\n            )\n       (print s)\n       )&quot;, :offset 118, :ns &quot;svg.core&quot;} {:command &quot;(doseq [s @data-params]\n       (let [q (:name s)\n             ss s]\n            (conj ss {:id 1})\n            )\n       (print ss)\n       )&quot;, :offset 138, :ns &quot;svg.core&quot;} {:command &quot;(doseq [s @data-params]\n       (let [q (:name s)\n             ss s]\n            (assoc ss :users 1)\n            )\n       (print ss)\n       )&quot;, :offset 140, :ns &quot;svg.core&quot;} {:command &quot;(let [tm (transient {})] (doseq [x (range 100)]\n                                (assoc! tm x 0)) (println tm))&quot;, :offset 110, :ns &quot;svg.core&quot;} {:command &quot;(let [tm (transient {})] (doseq [x (range 100)]\n                                (assoc! tm x 0)) (map tm))\n&quot;, :offset 107, :ns &quot;svg.core&quot;} {:command &quot;(let [tm (transient {})] (doseq [x (range 100)]\n                                (assoc! tm x 0)) (tm))&quot;, :offset 102, :ns &quot;svg.core&quot;} {:command &quot;(let [tm (transient {})] (doseq [x (range 100)]\n                                (assoc! tm x 0)) tm)&quot;, :offset 100, :ns &quot;svg.core&quot;} {:command &quot;(let [tm (transient {})] (doseq [x (range 100)]\n                                (assoc! tm x 0)) (persistent! tm))&quot;, :offset 114, :ns &quot;svg.core&quot;} {:command &quot;(defn parse-subs [sub]\n      (doseq [s sub]\n             (let [resp (parse (fetch-page (str (:url source) s)))\n                   issue s\n                   tm (transient {})]\n                  (conj p {:issue issue :name (first (get-name resp))})\n                  )))&quot;, :offset 269, :ns &quot;svg.core&quot;} {:command &quot;(defn parse-subs [sub]\n      (doseq [s sub]\n             (let [resp (parse (fetch-page (str (:url source) s)))\n                   issue s\n                   tm (transient {})]\n                  (assoc! tm {:issue issue :name (first (get-name resp))})))\n                  )&quot;, :offset 272, :ns &quot;svg.core&quot;} {:command &quot;(defn parse-subs [sub]\n      (doseq [s sub]\n             (let [resp (parse (fetch-page (str (:url source) s)))\n                   issue s\n                   tm (transient {})]\n                  (assoc! tm {:issue issue :name (first (get-name resp))})))\n      (persistent! tm)\n                  )&quot;, :offset 295, :ns &quot;svg.core&quot;} {:command &quot;(defn parse-subs [sub tm (transient {})]\n      (doseq [s sub]\n             (let [resp (parse (fetch-page (str (:url source) s)))\n                   issue s\n                   ]\n                  (assoc! tm {:issue issue :name (first (get-name resp))})))\n      (persistent! tm)\n                  )&quot;, :offset 296, :ns &quot;svg.core&quot;} {:command &quot;(defn parse-subs [sub]\n      (doseq [s sub tm (transient {})]\n             (let [resp (parse (fetch-page (str (:url source) s)))\n                   issue s\n                   ]\n                  (assoc! tm {:issue issue :name (first (get-name resp))})))\n      (persistent! tm)\n                  )&quot;, :offset 296, :ns &quot;svg.core&quot;} {:command &quot;\n(let [tm (transient {})]\n     (doseq [x (range 100)]\n            (assoc! tm {:issue 1}))\n     (persistent! tm))&quot;, :offset 112, :ns &quot;svg.core&quot;} {:command &quot;(let [tm (transient {})]\n     (doseq [x (range 100)]\n            (assoc! tm 1 {:issue 1}))\n     (persistent! tm))&quot;, :offset 113, :ns &quot;svg.core&quot;} {:command &quot;(let [tm (transient {})]\n     (doseq [x (range 100)]\n            (assoc! tm {:issue 1}))\n     (persistent! tm))&quot;, :offset 111, :ns &quot;svg.core&quot;} {:command &quot;(let [tm (transient {})]\n     (doseq [x (range 100)]\n            (conj tm {:issue 1}))\n     (persistent! tm))\n&quot;, :offset 110, :ns &quot;svg.core&quot;} {:command &quot;(let [tm (transient {})]\n     (doseq [x (range 100)]\n            (conj tm {:issue 1}))\n     (persistent! tm))&quot;, :offset 109, :ns &quot;svg.core&quot;} {:command &quot;(let [tm (transient {})]\n     (doseq [x (range 100)]\n            (conj! tm {:issue 1}))\n     (persistent! tm))&quot;, :offset 110, :ns &quot;svg.core&quot;} {:command &quot;(let [tm (transient {})]\n     (doseq [x (range 100)]\n            (conj! tm {:issue x}))\n     (persistent! tm))&quot;, :offset 110, :ns &quot;svg.core&quot;} {:command &quot;(let [tm (transient {})]\n     (doseq [x (range 100)]\n            (assoc! tm {:issue x}))\n     (persistent! tm))&quot;, :offset 111, :ns &quot;svg.core&quot;} {:command &quot;(let [tm (transient [])]\n     (doseq [x (range 100)]\n            (conj! tm {:issue x}))\n     (persistent! tm))\n&quot;, :offset 111, :ns &quot;svg.core&quot;} {:command &quot;(defn parse-subs [sub]\n\n      (let [tm (transient [])]\n      (doseq [s sub]\n             (let [resp (parse (fetch-page (str (:url source) s)))\n                   issue s\n                   ]\n                  (conj! tm {:issue issue :name (first (get-name resp))})))\n           (persistent! tm)))&quot;, :offset 296, :ns &quot;svg.core&quot;} {:command &quot;(defn parse-subs [sub]\n      (let [tm (transient [])]\n      (doseq [s sub]\n             (let [resp (parse (fetch-page (str (:url source) s)))\n                   issue s\n                   ]\n                  (conj! tm {:issue issue :name (first (get-name resp))})))\n           (persistent! tm)))&quot;, :offset 295, :ns &quot;svg.core&quot;} {:command &quot;(defn parse-subs [sub]\n      (let [tm (transient [])]\n      (doseq [s sub]\n             (let [resp (parse (fetch-page (str (:url source) s)))\n                   issue s]\n                  (conj! tm {:issue issue :name (first (get-name resp))})))\n           ) (persistent! tm))&quot;, :offset 276, :ns &quot;svg.core&quot;} {:command &quot;(defn parse-subs [sub]\n      (let [tm (transient [])]\n      (doseq [s sub]\n             (let [resp (parse (fetch-page (str (:url source) s)))\n                   issue s]\n                  (conj! tm {:issue issue :name (first (get-name resp))})\n                  ))\n           (persistent! tm)))&quot;, :offset 294, :ns &quot;svg.core&quot;} {:command &quot;(let [tm (transient [])]\n     (doseq [x (range 100)]\n            (conj! tm {:issue x}))\n     (persistent! tm))&quot;, :offset 110, :ns &quot;svg.core&quot;} {:command &quot;(defn parse-subs [sub]\n      (let [tm (transient [])]\n           (doseq [x (range 100)]\n                  (conj! tm {:issue x}))\n           (persistent! tm)))&quot;, :offset 158, :ns &quot;svg.core&quot;} {:command &quot;(defn parse-subs []\n      (let [tm (transient [])]\n           (doseq [x (range 100)]\n                  (conj! tm {:issue x}))\n           (persistent! tm)))&quot;, :offset 155, :ns &quot;svg.core&quot;} {:command &quot;(defn make-svg [issue]\n      (if (empty? @sess)\n        (login (:login source) (:pwd source))\n        (let [page (parse (fetch-page (str (:url source) issue)))\n              subtasks  (get-by page :type \&quot;Subtask\&quot;)\n              subdata (parse-subs)]\n             (println subdata))))&quot;, :offset 283, :ns &quot;svg.core&quot;} {:command &quot;(defn make-svg [issue]\n      (if (empty? @sess)\n        (login (:login source) (:pwd source))\n        (let [page (parse (fetch-page (str (:url source) issue)))\n              subtasks  (get-by page :type \&quot;Subtask\&quot;)\n              subdata (parse-subs subtasks)]\n             (println subdata))))&quot;, :offset 292, :ns &quot;svg.core&quot;} {:command &quot;(make-svg \&quot;HSK-2748\&quot;)\n&quot;, :offset 22, :ns &quot;svg.core&quot;} {:command &quot;(defn make-svg [issue]\n      (if (empty? @sess)\n        (login (:login source) (:pwd source))\n        (let [page (parse (fetch-page (str (:url source) issue)))\n              subtasks  (get-by page :type \&quot;Subtask\&quot;)\n              subdata (parse-subs subtasks)]\n             (show-all subdata))))&quot;, :offset 293, :ns &quot;svg.core&quot;} {:command &quot;(defn make-svg [issue]\n      (if (empty? @sess)\n        (login (:login source) (:pwd source))\n        (let [page (parse (fetch-page (str (:url source) issue)))\n              sub-tasks  (get-by page :type \&quot;Subtask\&quot;)\n              sub-data (parse-subs sub-tasks)]\n             (show-all sub-data))))&quot;, :offset 297, :ns &quot;svg.core&quot;} {:command &quot;(defn show-all [data] (doseq [d data]\n                         (println (str (:issue d) \&quot; | \&quot; (:name d)) )\n                         ))&quot;, :offset 134, :ns &quot;svg.core&quot;} {:command &quot;(defn show-all [data] \n      (doseq [d data] \n             (println (str (:issue d) \&quot; | \&quot; (:name d)))))&quot;, :offset 103, :ns &quot;svg.core&quot;} {:command &quot;(defn parse-subs [sub]\n      (let [tm (transient [])]\n      (doseq [s sub]\n             (let [resp (parse (fetch-page (str (:url source) s)))\n                   issue s]\n                  (conj! tm {:issue issue :name (first (get-name resp))})))\n           (persistent! tm)))&quot;, :offset 275, :ns &quot;svg.core&quot;} {:command &quot;(defroutes app-routes\n           (GET \&quot;/\&quot; [] \&quot;Youtrack issue-&gt;svg mini service\&quot;)\n           (GET \&quot;/:id.svg\&quot; [id]\n             (make-svg id))\n           (route/not-found \&quot;Not Found\&quot;))&quot;, :offset 182, :ns &quot;svg.core&quot;} {:command &quot;@data-params&quot;, :offset 12, :ns &quot;svg.core&quot;} {:command &quot;(defn show-all [data]\n      (str \&quot;&lt;?xml version='1.0' standalone='no'?&gt;\\n&lt;!DOCTYPE svg PUBLIC '-//W3C//DTD SVG 1.1//EN'\\n        'http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd'&gt;\\n&lt;svg width='100%' height='100%' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'&gt;\\n\\n    &lt;g id='rowGroup' transform='translate(0, 0)'&gt;\&quot;)\n      (doseq [d data]\n             (println (str (:issue d) \&quot; | \&quot; (:name d)))))&quot;, :offset 427, :ns &quot;svg.core&quot;} {:command &quot;(defn show-all [data]\n      (str \&quot;&lt;?xml version='1.0' standalone='no'?&gt;\\n&lt;!DOCTYPE svg PUBLIC '-//W3C//DTD SVG 1.1//EN'\\n        'http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd'&gt;\\n&lt;svg width='100%' height='100%' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'&gt;\\n\\n    &lt;g id='rowGroup' transform='translate(0, 0)'&gt;\&quot;\n\n           (doseq [d data]\n                  (println (str (:issue d) \&quot; | \&quot; (:name d))))))&quot;, :offset 438, :ns &quot;svg.core&quot;} {:command &quot;(defn show-all [data]\n      (str \&quot;&lt;?xml version='1.0' standalone='no'?&gt;\\n&lt;!DOCTYPE svg PUBLIC '-//W3C//DTD SVG 1.1//EN'\\n        'http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd'&gt;\\n&lt;svg width='100%' height='100%' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'&gt;\\n\\n    &lt;g id='rowGroup' transform='translate(0, 0)'&gt;\&quot;\n\n           (doseq [d data]\n                  (println (str (:issue d) \&quot; | \&quot; (:name d))))) \n      \&quot;&lt;/g&gt;\\n&lt;/svg&gt;\&quot;)&quot;, :offset 460, :ns &quot;svg.core&quot;} {:command &quot;(defn show-all [data]\n      (str \&quot;&lt;?xml version='1.0' standalone='no'?&gt;\\n&lt;!DOCTYPE svg PUBLIC '-//W3C//DTD SVG 1.1//EN'\\n        'http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd'&gt;\\n&lt;svg width='100%' height='100%' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'&gt;\\n\\n    &lt;g id='rowGroup' transform='translate(0, 0)'&gt;\&quot; (doseq [d data]\n                  (println (str (:issue d) \&quot; | \&quot; (:name d))))) \n      \&quot;&lt;/g&gt;\\n&lt;/svg&gt;\&quot;)&quot;, :offset 448, :ns &quot;svg.core&quot;} {:command &quot;(defn show-all [data]\n      (str \&quot;&lt;?xml version='1.0' standalone='no'?&gt;\\n&lt;!DOCTYPE svg PUBLIC '-//W3C//DTD SVG 1.1//EN'\\n        'http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd'&gt;\\n&lt;svg width='100%' height='100%' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'&gt;\\n\\n    &lt;g id='rowGroup' transform='translate(0, 0)'&gt;\&quot; (doseq [d data]\n                  (str (:issue d) \&quot; | \&quot; (:name d))))\n      \&quot;&lt;/g&gt;\\n&lt;/svg&gt;\&quot;)&quot;, :offset 437, :ns &quot;svg.core&quot;} {:command &quot;(defn show-all [data]\n      (-&gt; (str \&quot;&lt;?xml version='1.0' standalone='no'?&gt;\\n&lt;!DOCTYPE svg PUBLIC '-//W3C//DTD SVG 1.1//EN'\\n        'http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd'&gt;\\n&lt;svg width='100%' height='100%' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'&gt;\\n\\n    &lt;g id='rowGroup' transform='translate(0, 0)'&gt;\&quot;)\n          (doseq [d data]\n                 (str (:issue d) \&quot; | \&quot; (:name d))))\n          (str \&quot;&lt;/g&gt;\\n&lt;/svg&gt;\&quot;))&quot;, :offset 461, :ns &quot;svg.core&quot;} {:command &quot;(defn show-all [data]\n      (-&gt; (str \&quot;&lt;?xml version='1.0' standalone='no'?&gt;\\n&lt;!DOCTYPE svg PUBLIC '-//W3C//DTD SVG 1.1//EN'\\n        'http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd'&gt;\\n&lt;svg width='100%' height='100%' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'&gt;\\n\\n    &lt;g id='rowGroup' transform='translate(0, 0)'&gt;\&quot;)\n          (doseq [d data]\n                 (str (:issue d) \&quot; | \&quot; (:name d)))\n          (str \&quot;&lt;/g&gt;\\n&lt;/svg&gt;\&quot;)))&quot;, :offset 461, :ns &quot;svg.core&quot;} {:command &quot;(defn show-all [data]\n      (-&gt; (str \&quot;&lt;?xml version='1.0' standalone='no'?&gt;\\n&lt;!DOCTYPE svg PUBLIC '-//W3C//DTD SVG 1.1//EN'\\n        'http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd'&gt;\\n&lt;svg width='100%' height='100%' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'&gt;\\n\\n    &lt;g id='rowGroup' transform='translate(0, 0)'&gt;\&quot;)\n          (doseq [d data]\n                 )\n          (str \&quot;&lt;/g&gt;\\n&lt;/svg&gt;\&quot;)))&quot;, :offset 429, :ns &quot;svg.core&quot;} {:command &quot;(defn show-all [data]\n      (-&gt; (str \&quot;&lt;?xml version='1.0' standalone='no'?&gt;\\n&lt;!DOCTYPE svg PUBLIC '-//W3C//DTD SVG 1.1//EN'\\n        'http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd'&gt;\\n&lt;svg width='100%' height='100%' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'&gt;\\n\\n    &lt;g id='rowGroup' transform='translate(0, 0)'&gt;\&quot;)\n          (doseq [d data]\n                 (print \&quot;\&quot;))\n          (str \&quot;&lt;/g&gt;\\n&lt;/svg&gt;\&quot;)))&quot;, :offset 439, :ns &quot;svg.core&quot;} {:command &quot;show-row&quot;, :offset 8, :ns &quot;svg.core&quot;} {:command &quot;(defn show-row [row]\n\n      (doseq [d row]\n             (str \&quot;&lt;/g&gt;\\n&lt;/svg&gt;\&quot;)\n             ))&quot;, :offset 92, :ns &quot;svg.core&quot;} {:command &quot;(defn show-all [data]\n      (-&gt; (str \&quot;&lt;?xml version='1.0' standalone='no'?&gt;\\n&lt;!DOCTYPE svg PUBLIC '-//W3C//DTD SVG 1.1//EN'\\n        'http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd'&gt;\\n&lt;svg width='100%' height='100%' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'&gt;\\n\\n    &lt;g id='rowGroup' transform='translate(0, 0)'&gt;\&quot;)\n          (str \&quot;&lt;/g&gt;\\n&lt;/svg&gt;\&quot;)))&quot;, :offset 384, :ns &quot;svg.core&quot;} {:command &quot;-&quot;, :offset 1, :ns &quot;svg.core&quot;} {:command &quot;(defn show-all [data]\n      (-&gt; (str \&quot;&lt;?xml version='1.0' standalone='no'?&gt;\\n&lt;!DOCTYPE svg PUBLIC '-//W3C//DTD SVG 1.1//EN'\\n        'http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd'&gt;\\n&lt;svg width='100%' height='100%' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'&gt;\\n\\n    &lt;g id='rowGroup' transform='translate(0, 0)'&gt;\&quot;)\n          (show-row data)\n          (str \&quot;&lt;/g&gt;\\n&lt;/svg&gt;\&quot;)))&quot;, :offset 410, :ns &quot;svg.core&quot;} {:command &quot;(defn show-all [data]\n      (-&gt; (str \&quot;&lt;?xml version='1.0' standalone='no'?&gt;\\n&lt;!DOCTYPE svg PUBLIC '-//W3C//DTD SVG 1.1//EN'\\n        'http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd'&gt;\\n&lt;svg width='100%' height='100%' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'&gt;\\n\\n    &lt;g id='rowGroup' transform='translate(0, 0)'&gt;\&quot;)\n          (println data)\n          (str \&quot;&lt;/g&gt;\\n&lt;/svg&gt;\&quot;)))&quot;, :offset 409, :ns &quot;svg.core&quot;} {:command &quot;(defn show-all [data]\n      (do (str \&quot;&lt;?xml version='1.0' standalone='no'?&gt;\\n&lt;!DOCTYPE svg PUBLIC '-//W3C//DTD SVG 1.1//EN'\\n        'http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd'&gt;\\n&lt;svg width='100%' height='100%' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'&gt;\\n\\n    &lt;g id='rowGroup' transform='translate(0, 0)'&gt;\&quot;)\n          (println data)\n          (str \&quot;&lt;/g&gt;\\n&lt;/svg&gt;\&quot;)))&quot;, :offset 409, :ns &quot;svg.core&quot;} {:command &quot;(defn show-all [data]\n      (do (str \&quot;&lt;?xml version='1.0' standalone='no'?&gt;\\n&lt;!DOCTYPE svg PUBLIC '-//W3C//DTD SVG 1.1//EN'\\n        'http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd'&gt;\\n&lt;svg width='100%' height='100%' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'&gt;\\n\\n    &lt;g id='rowGroup' transform='translate(0, 0)'&gt;\&quot;)\n          (str \&quot;&lt;/g&gt;\\n&lt;/svg&gt;\&quot;)))&quot;, :offset 384, :ns &quot;svg.core&quot;} {:command &quot;(defn show-all [data]\n      (str \&quot;&lt;?xml version='1.0' standalone='no'?&gt;\\n&lt;!DOCTYPE svg PUBLIC '-//W3C//DTD SVG 1.1//EN'\\n        'http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd'&gt;\\n&lt;svg width='100%' height='100%' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'&gt;\\n\\n    &lt;g id='rowGroup' transform='translate(0, 0)'&gt;\&quot;\n           \&quot;&lt;/g&gt;\\n&lt;/svg&gt;\&quot;\n           ))&quot;, :offset 386, :ns &quot;svg.core&quot;} {:command &quot;(defn show-all [data]\n      (str \&quot;&lt;?xml version='1.0' standalone='no'?&gt;\\n&lt;!DOCTYPE svg PUBLIC '-//W3C//DTD SVG 1.1//EN'\\n        'http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd'&gt;\\n&lt;svg width='100%' height='100%' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'&gt;\\n\\n    &lt;g id='rowGroup' transform='translate(0, 0)'&gt;\&quot;\n           (show-row data)\n           \&quot;&lt;/g&gt;\\n&lt;/svg&gt;\&quot;\n           ))&quot;, :offset 413, :ns &quot;svg.core&quot;} {:command &quot;(defn show-row [row]\n\n      (doseq [d row]\n             \n             )\n      (str \&quot;&lt;/g&gt;\\n&lt;/svg&gt;\&quot;)\n      )&quot;, :offset 106, :ns &quot;svg.core&quot;} {:command &quot;(defn show-all [data]\n      (str \&quot;&lt;?xml version='1.0' standalone='no'?&gt;\\n&lt;!DOCTYPE svg PUBLIC '-//W3C//DTD SVG 1.1//EN'\\n        'http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd'&gt;\\n&lt;svg width='100%' height='100%' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'&gt;\\n\\n    &lt;g id='rowGroup' transform='translate(0, 0)'&gt;\&quot;\n           (str (show-row data))\n           \&quot;&lt;/g&gt;\\n&lt;/svg&gt;\&quot;\n           ))&quot;, :offset 419, :ns &quot;svg.core&quot;} {:command &quot;(defn show-row [row]\n      (str \&quot;1111\&quot;)\n      )&quot;, :offset 47, :ns &quot;svg.core&quot;} {:command &quot;(defn show-all [data]\n      (str \&quot;&lt;?xml version='1.0' standalone='no'?&gt;\\n&lt;!DOCTYPE svg PUBLIC '-//W3C//DTD SVG 1.1//EN'\\n'http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd'&gt;\\n&lt;svg width='100%' height='100%' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'&gt;\\n\\n&lt;g id='rowGroup' transform='translate(0, 0)'&gt;\&quot;\n           (string (show-row data))\n           \&quot;&lt;/g&gt;\\n&lt;/svg&gt;\&quot;\n           ))&quot;, :offset 410, :ns &quot;svg.core&quot;} {:command &quot;(defn show-all [data]\n      (str \&quot;&lt;?xml version='1.0' standalone='no'?&gt;\\n&lt;!DOCTYPE svg PUBLIC '-//W3C//DTD SVG 1.1//EN'\\n'http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd'&gt;\\n&lt;svg width='100%' height='100%' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'&gt;\\n\\n&lt;g id='rowGroup' transform='translate(0, 0)'&gt;\&quot;\n           (show-row data)\n           \&quot;&lt;/g&gt;\\n&lt;/svg&gt;\&quot;\n           ))&quot;, :offset 401, :ns &quot;svg.core&quot;} {:command &quot;(show-row \&quot;123\&quot;)&quot;, :offset 16, :ns &quot;svg.core&quot;} {:command &quot;(comment\n\n@sess\n\n(make-svg \&quot;HSK-2748\&quot;)\n\n(show-all \&quot;\&quot;)\n\n(show-row \&quot;[1 2 3]\&quot;)\n)&quot;, :offset 77, :ns &quot;svg.core&quot;} {:command &quot;(defn show-row [data]\n      (doseq [d data]\n        (str \&quot;1111\&quot;)\n      ))&quot;, :offset 73, :ns &quot;svg.core&quot;} {:command &quot;(defn show-row [data]\n      (doseq [d data]\n        \n      ) (str \&quot;1111\&quot;))&quot;, :offset 74, :ns &quot;svg.core&quot;} {:command &quot;(defn show-row [data]\n      (doseq [d data]\n             (str \&quot;1111\&quot;)\n      ) (str \&quot;1111\&quot;))&quot;, :offset 91, :ns &quot;svg.core&quot;} {:command &quot;(defn show-row [data]\n      (doseq [d data]\n             (print \&quot;1111\&quot;)\n      ) (str \&quot;1111\&quot;))&quot;, :offset 93, :ns &quot;svg.core&quot;} {:command &quot;(defn show-row [data]\n      (let [tm (transient [])]\n        (doseq [d data]\n               (conj! tm {:issue issue :name (first (get-name resp))})\n      ) (persistent! tm)))&quot;, :offset 174, :ns &quot;svg.core&quot;} {:command &quot;(defn show-row [data]\n      (let [tm (transient [])]\n        (doseq [d data]\n               (conj! tm \&quot;zzz\&quot;)\n      ) (persistent! tm)))&quot;, :offset 135, :ns &quot;svg.core&quot;} {:command &quot;o&quot;, :offset 1, :ns &quot;svg.core&quot;} {:command &quot;(defn show-row [data]\n      (let [tm (transient [])]\n        (doseq [d data]\n               (conj! tm \&quot;zzz\&quot;)\n      ) (str/join  (persistent! tm))\n          ))&quot;, :offset 158, :ns &quot;svg.core&quot;} {:command &quot;(defn show-row [data]\n      (let [tm (transient [])]\n        (doseq [d data]\n               (conj! tm \&quot;zzz\&quot;)\n      ) (str/join (persistent! tm))\n          ))&quot;, :offset 157, :ns &quot;svg.core&quot;} {:command &quot;(defn show-row [data]\n      (let [tm (transient [])]\n        (doseq [d data]\n               (conj! tm \&quot;zzz\&quot;)\n      ) (clojure.string/join (persistent! tm))\n          ))&quot;, :offset 168, :ns &quot;svg.core&quot;} {:command &quot;(comment\n\n@sess\n\n(make-svg \&quot;HSK-2748\&quot;)\n\n(show-all \&quot;\&quot;)\n\n(show-row [1 2 3])\n)&quot;, :offset 75, :ns &quot;svg.core&quot;} {:command &quot;(defn show-row [data]\n      (let [tm (transient [])]\n        (doseq [d data]\n               (conj! tm \&quot;&lt;text x='30' y='30' font-size='18px' text-anchor='middle'&gt;\\n            &lt;tspan x='30' dy='1.5em' font-weight='bold' fill='crimson' text-anchor='start'&gt;Q1&lt;/tspan&gt;\\n            &lt;tspan x='100'&gt;$ 223&lt;/tspan&gt;\\n            &lt;tspan x='200'&gt;$ 195&lt;/tspan&gt;\\n            &lt;tspan x='300'&gt;$ 28&lt;/tspan&gt;\\n        &lt;/text&gt;\&quot;)) \n           (clojure.string/join (persistent! tm))))&quot;, :offset 462, :ns &quot;svg.core&quot;} {:command &quot;(show-all \&quot;\&quot;)&quot;, :offset 13, :ns &quot;svg.core&quot;} {:command &quot;\n(show-all \&quot;\&quot;)&quot;, :offset 14, :ns &quot;svg.core&quot;} {:command &quot;(defn show-row [data]\n      (let [tm (transient [])]\n        (doseq [d data]\n               (conj! tm \&quot;&lt;text x='30' y='30' font-size='18px' text-anchor='middle'&gt;\\n\n               &lt;tspan x='30' dy='1.5em' font-weight='bold' fill='crimson' text-anchor='start'&gt;Q1&lt;/tspan&gt;\\n\n                           &lt;tspan x='100'&gt;$ 223&lt;/tspan&gt;\\n\n                                       &lt;tspan x='200'&gt;$ 195&lt;/tspan&gt;\\n\n                                                   &lt;tspan x='300'&gt;$ 28&lt;/tspan&gt;\\n\n                                                           &lt;/text&gt;\&quot;)) \n           (clojure.string/join (persistent! tm))))&quot;, :offset 602, :ns &quot;svg.core&quot;} {:command &quot;(show-all [1 2 3])&quot;, :offset 18, :ns &quot;svg.core&quot;} {:command &quot;(show-row [1 2 3])&quot;, :offset 18, :ns &quot;svg.core&quot;} {:command &quot;(defn show-row [data]\n      (let [tm (transient [])]\n        (doseq [d data]\n               (conj! tm \&quot;&lt;text x='30' y='30' font-size='18px' text-anchor='middle'&gt;\n               &lt;tspan x='30' dy='1.5em' font-weight='bold' fill='crimson' text-anchor='start'&gt;Q1&lt;/tspan&gt;\n               &lt;tspan x='100'&gt;$ 223&lt;/tspan&gt;\n               &lt;tspan x='200'&gt;$ 195&lt;/tspan&gt;\n               &lt;tspan x='300'&gt;$ 28&lt;/tspan&gt;\n               &lt;/text&gt;\&quot;)) \n           (clojure.string/join (persistent! tm))))&quot;, :offset 476, :ns &quot;svg.core&quot;} {:command &quot;(defn show-row [data]\n      (let [tm (transient [])]\n        (doseq [d data]\n               (println d)\n               (conj! tm \&quot;&lt;text x='30' y='30' font-size='18px' text-anchor='middle'&gt;\n               &lt;tspan x='30' dy='1.5em' font-weight='bold' fill='crimson' text-anchor='start'&gt;Q1&lt;/tspan&gt;\n               &lt;tspan x='100'&gt;$ 223&lt;/tspan&gt;\n               &lt;tspan x='200'&gt;$ 195&lt;/tspan&gt;\n               &lt;tspan x='300'&gt;$ 28&lt;/tspan&gt;\n               &lt;/text&gt;\&quot;))\n           (clojure.string/join (persistent! tm))))&quot;, :offset 502, :ns &quot;svg.core&quot;} {:command &quot;(defn show-row [data]\n      (let [tm (transient [])]\n        (doseq [d data]\n               (conj! tm \&quot;&lt;text x='30' y='30' font-size='18px' text-anchor='middle'&gt;\n               &lt;tspan x='30' dy='1.5em' font-weight='bold' fill='crimson' text-anchor='start'&gt;Q1&lt;/tspan&gt;\n               &lt;tspan x='100'&gt;\&quot; (:issue d) \&quot;&lt;/tspan&gt;\n               &lt;tspan x='200'&gt;$ 195&lt;/tspan&gt;\n               &lt;tspan x='300'&gt;$ 28&lt;/tspan&gt;\n               &lt;/text&gt;\&quot;))\n           (clojure.string/join (persistent! tm))))&quot;, :offset 484, :ns &quot;svg.core&quot;} {:command &quot;\n(make-svg \&quot;HSK-2748\&quot;)&quot;, :offset 22, :ns &quot;svg.core&quot;} {:command &quot;(defn show-row [data]\n      (let [tm (transient [])]\n        (doseq [d data]\n               (conj! tm (str \&quot;&lt;text x='30' y='30' font-size='18px' text-anchor='middle'&gt;\n               &lt;tspan x='30' dy='1.5em' font-weight='bold' fill='crimson' text-anchor='start'&gt;Q1&lt;/tspan&gt;\n               &lt;tspan x='100'&gt;\&quot; (:issue d) \&quot;&lt;/tspan&gt;\n               &lt;tspan x='200'&gt;$ 195&lt;/tspan&gt;\n               &lt;tspan x='300'&gt;$ 28&lt;/tspan&gt;\n               &lt;/text&gt;\&quot;)))\n           (clojure.string/join (persistent! tm))))&quot;, :offset 490, :ns &quot;svg.core&quot;} {:command &quot;(defn show-row [data]\n      (let [tm (transient [])]\n        (doseq [d data]\n               (conj! tm (str \&quot;&lt;text x='30' y='30' font-size='18px' text-anchor='middle'&gt;\n               &lt;tspan x='30' dy='1.5em' font-weight='bold' fill='crimson' text-anchor='start'&gt;Q1&lt;/tspan&gt;\n               &lt;tspan x='100'&gt;\&quot; (:issue d) \&quot;&lt;/tspan&gt;\n               &lt;tspan x='200'&gt;\&quot; (:name d) \&quot;&lt;/tspan&gt;\n               &lt;tspan x='300'&gt;$ 28&lt;/tspan&gt;\n               &lt;/text&gt;\&quot;)))\n           (clojure.string/join (persistent! tm))))&quot;, :offset 498, :ns &quot;svg.core&quot;} {:command &quot;(make-svg \&quot;HSK-2748\&quot;)&quot;, :offset 21, :ns &quot;svg.core&quot;} {:command &quot;(ns svg.core\n    (:use ring.adapter.jetty)\n    (:require\n      [compojure.core :refer :all]\n      [compojure.route :as route]\n      [clj-http.client :as client]\n      [clojure.xml :as xml]\n      [clojure.java.io :as io]\n      [clojure.zip :as zip]\n      [ring.middleware.defaults :refer [wrap-defaults site-defaults]]))&quot;, :offset 319, :ns &quot;svg.core&quot;} {:command &quot;(defroutes app-routes\n           (GET \&quot;/\&quot; [] \&quot;Youtrack issue-&gt;svg mini service\&quot;)\n           (GET \&quot;/:id.svg\&quot; [id]\n             \&quot;ss\&quot;)\n           (route/not-found \&quot;Not Found\&quot;))&quot;, :offset 173, :ns &quot;svg.core&quot;} {:command &quot;(make-svg id)&quot;, :offset 13, :ns &quot;svg.core&quot;} {:command &quot;(defn show-rows [data]\n      (let [tm (transient [])]\n        (doseq [d data]\n               (conj! tm (str \&quot;&lt;text x='30' y='30' font-size='18px' text-anchor='middle'&gt;\n               &lt;tspan x='30' dy='1.5em' font-weight='bold' fill='crimson' text-anchor='start'&gt;Q1&lt;/tspan&gt;\n               &lt;tspan x='100'&gt;\&quot; (:issue d) \&quot;&lt;/tspan&gt;\n               &lt;tspan x='200'&gt;\&quot; (:name d) \&quot;&lt;/tspan&gt;\n               &lt;tspan x='300'&gt;$ 28&lt;/tspan&gt;\n               &lt;/text&gt;\&quot;)))\n           (clojure.string/join (persistent! tm))))&quot;, :offset 499, :ns &quot;svg.core&quot;} {:command &quot;(defn show-all [data]\n      (str \&quot;&lt;?xml version='1.0' standalone='no'?&gt;\\n&lt;!DOCTYPE svg PUBLIC '-//W3C//DTD SVG 1.1//EN'\\n'http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd'&gt;\\n&lt;svg width='100%' height='100%' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'&gt;\\n\\n&lt;g id='rowGroup' transform='translate(0, 0)'&gt;\&quot;\n          \n           \&quot;&lt;/g&gt;\\n&lt;/svg&gt;\&quot;\n           ))&quot;, :offset 385, :ns &quot;svg.core&quot;} {:command &quot; (show-row data)&quot;, :offset 16, :ns &quot;svg.core&quot;} {:command &quot;(defroutes app-routes\n           (GET \&quot;/\&quot; [] \&quot;Youtrack issue-&gt;svg mini service\&quot;)\n           (route/not-found \&quot;Not Found\&quot;))&quot;, :offset 122, :ns &quot;svg.core&quot;} {:command &quot;           (GET \&quot;/:id.svg\&quot; [id]\n             (make-svg id))&quot;, :offset 59, :ns &quot;svg.core&quot;} {:command &quot;(defproject svg \&quot;0.1.3-SNAPSHOT\&quot;\n  :description \&quot;FIXME: write description\&quot;\n  :url \&quot;http://example.com/FIXME\&quot;\n  :min-lein-version \&quot;2.0.0\&quot;\n  :main svg.core\n  :dependencies [[org.clojure/clojure \&quot;1.8.0\&quot;]\n                 [compojure \&quot;1.5.1\&quot;]\n                 [ring/ring-core \&quot;1.5.0\&quot;]\n                 [ring/ring-jetty-adapter \&quot;1.5.0\&quot;]\n                 [ring/ring-defaults \&quot;0.2.1\&quot;]\n                 [clj-http \&quot;3.7.0\&quot;]]\n  :profiles\n  {:dev {:dependencies [[javax.servlet/servlet-api \&quot;2.5\&quot;]\n                        [ring/ring-mock \&quot;0.3.0\&quot;]]}})&quot;, :offset 536, :ns &quot;svg.core&quot;} {:command &quot;(defn get-name [data]\n      (for [x (get-by data :name \&quot;summary\&quot;)]\n           (first (:content x))))&quot;, :offset 100, :ns &quot;svg.core&quot;}], :remote []}}</component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="Clojure REPL.REPL">
    <configuration name="REPL" type="ClojureREPL" factoryName="Local">
      <setting name="replType" value="1" />
      <module name="svg" />
      <setting name="jvmArgs" value="" />
      <setting name="parameters" value="" />
      <setting name="workingDir" value="$PROJECT_DIR$" />
      <setting name="profiles" value="" />
    </configuration>
    <configuration default="true" type="Applet" factoryName="Applet">
      <option name="HTML_USED" value="false" />
      <option name="WIDTH" value="400" />
      <option name="HEIGHT" value="300" />
      <option name="POLICY_FILE" value="$APPLICATION_HOME_DIR$/bin/appletviewer.policy" />
      <module />
    </configuration>
    <configuration default="true" type="Application" factoryName="Application">
      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
      <option name="MAIN_CLASS_NAME" />
      <option name="VM_PARAMETERS" />
      <option name="PROGRAM_PARAMETERS" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="ENABLE_SWING_INSPECTOR" value="false" />
      <option name="ENV_VARIABLES" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <module name="" />
      <envs />
    </configuration>
    <configuration default="true" type="JUnit" factoryName="JUnit">
      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
      <module name="" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="PACKAGE_NAME" />
      <option name="MAIN_CLASS_NAME" />
      <option name="METHOD_NAME" />
      <option name="TEST_OBJECT" value="class" />
      <option name="VM_PARAMETERS" value="-ea" />
      <option name="PARAMETERS" />
      <option name="WORKING_DIRECTORY" value="$MODULE_DIR$" />
      <option name="ENV_VARIABLES" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <option name="TEST_SEARCH_SCOPE">
        <value defaultName="singleModule" />
      </option>
      <envs />
      <patterns />
    </configuration>
    <configuration default="true" type="#org.jetbrains.idea.devkit.run.PluginConfigurationType" factoryName="Plugin">
      <module name="" />
      <option name="VM_PARAMETERS" value="-Xmx512m -Xms256m -XX:MaxPermSize=250m -ea" />
      <option name="PROGRAM_PARAMETERS" />
      <predefined_log_file id="idea.log" enabled="true" />
    </configuration>
    <configuration default="true" type="Remote" factoryName="Remote">
      <option name="USE_SOCKET_TRANSPORT" value="true" />
      <option name="SERVER_MODE" value="false" />
      <option name="SHMEM_ADDRESS" value="javadebug" />
      <option name="HOST" value="localhost" />
      <option name="PORT" value="5005" />
    </configuration>
    <configuration default="true" type="TestNG" factoryName="TestNG">
      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
      <module name="" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="SUITE_NAME" />
      <option name="PACKAGE_NAME" />
      <option name="MAIN_CLASS_NAME" />
      <option name="METHOD_NAME" />
      <option name="GROUP_NAME" />
      <option name="TEST_OBJECT" value="CLASS" />
      <option name="VM_PARAMETERS" value="-ea" />
      <option name="PARAMETERS" />
      <option name="WORKING_DIRECTORY" value="$MODULE_DIR$" />
      <option name="OUTPUT_DIRECTORY" />
      <option name="ANNOTATION_TYPE" />
      <option name="ENV_VARIABLES" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <option name="TEST_SEARCH_SCOPE">
        <value defaultName="singleModule" />
      </option>
      <option name="USE_DEFAULT_REPORTERS" value="false" />
      <option name="PROPERTIES_FILE" />
      <envs />
      <properties />
      <listeners />
    </configuration>
    <configuration default="true" type="JetRunConfigurationType" factoryName="Kotlin">
      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
      <option name="MAIN_CLASS_NAME" />
      <option name="VM_PARAMETERS" />
      <option name="PROGRAM_PARAMETERS" />
      <option name="WORKING_DIRECTORY" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <module name="svg" />
      <envs />
    </configuration>
  </component>
  <component name="ShelveChangesManager" show_recycled="false">
    <option name="remove_strategy" value="false" />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="86bbf1ce-836a-4558-aea4-48695535f454" name="Default" comment="" />
      <created>1508315256351</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1508315256351</updated>
      <workItem from="1508315257559" duration="5789000" />
      <workItem from="1508322962958" duration="25782000" />
      <workItem from="1508411177952" duration="8015000" />
    </task>
    <servers />
  </component>
  <component name="TimeTrackingManager">
    <option name="totallyTimeSpent" value="39586000" />
  </component>
  <component name="ToolWindowManager">
    <frame x="0" y="23" width="1920" height="960" extended-state="6" />
    <editor active="true" />
    <layout>
      <window_info id="Palette" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="TODO" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="6" side_tool="false" content_ui="tabs" />
      <window_info id="Palette&#9;" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Image Layers" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
      <window_info id="Capture Analysis" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Event Log" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.32995495" sideWeight="0.5" order="7" side_tool="true" content_ui="tabs" />
      <window_info id="Maven Projects" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="REPL" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.24739583" sideWeight="0.5" order="3" side_tool="true" content_ui="tabs" />
      <window_info id="Run" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
      <window_info id="Version Control" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
      <window_info id="Leiningen" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Terminal" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
      <window_info id="Capture Tool" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
      <window_info id="Designer" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
      <window_info id="Project" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.24895833" sideWeight="0.5" order="0" side_tool="false" content_ui="combo" />
      <window_info id="Database" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Structure" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Ant Build" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="UI Designer" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
      <window_info id="Theme Preview" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Debug" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Favorites" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="2" side_tool="true" content_ui="tabs" />
      <window_info id="Cvs" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
      <window_info id="Message" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Commander" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Hierarchy" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="2" side_tool="false" content_ui="combo" />
      <window_info id="Inspection" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
      <window_info id="Find" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
    </layout>
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="1" />
  </component>
  <component name="VcsContentAnnotationSettings">
    <option name="myLimit" value="2678400000" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <option name="time" value="1" />
    </breakpoint-manager>
    <watches-manager />
  </component>
  <component name="editorHistoryManager">
    <entry file="file://$PROJECT_DIR$/src/svg/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/project.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="238">
          <caret line="14" column="0" lean-forward="false" selection-start-line="14" selection-start-column="0" selection-end-line="14" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/svg/handler.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/project.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="22" lean-forward="false" selection-start-line="0" selection-start-column="22" selection-end-line="0" selection-end-column="22" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/pom.xml">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="-1009">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/svg.iml">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/svg/handler.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="431">
          <caret line="92" column="0" lean-forward="true" selection-start-line="92" selection-start-column="0" selection-end-line="92" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/project.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="68">
          <caret line="4" column="7" lean-forward="false" selection-start-line="4" selection-start-column="0" selection-end-line="5" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/resources/public/data.svg">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="263">
          <caret line="16" column="18" lean-forward="false" selection-start-line="16" selection-start-column="13" selection-end-line="16" selection-end-column="18" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/svg/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="238">
          <caret line="14" column="17" lean-forward="false" selection-start-line="14" selection-start-column="17" selection-end-line="14" selection-end-column="17" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/README.md">
      <provider selected="true" editor-type-id="split-provider[text-editor;markdown-preview-editor]">
        <state split_layout="SPLIT">
          <first_editor relative-caret-position="34">
            <caret line="2" column="20" lean-forward="false" selection-start-line="2" selection-start-column="20" selection-end-line="2" selection-end-column="20" />
            <folding />
          </first_editor>
          <second_editor />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/.gitignore">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="170">
          <caret line="10" column="5" lean-forward="false" selection-start-line="10" selection-start-column="5" selection-end-line="10" selection-end-column="5" />
          <folding />
        </state>
      </provider>
    </entry>
  </component>
</project>